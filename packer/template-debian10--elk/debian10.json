{
  "builders": [
    {
      "type": "vmware-iso",
      "name": "template-Debian10--elk",
      "vm_name": "template-Debian10--elk",
      "cpus":"4",
      "memory":"6144",
      "Version": "12",
      "guest_os_type": "debian10-64",
      "vmx_data": {
        "ethernet0.networkName": "{{ user `esxi_network_portgroup` }}",
        "ethernet0.virtualDev": "e1000",
        "ethernet0.present": "TRUE",
        "virtualHW.version": "10",
        "scsi0.virtualDev": "lsisas1068"
      },

      "remote_type": "esx5",
      "remote_host": "{{ user `esxi_host` }}",
      "remote_username": "{{ user `esxi_user` }}",
      "remote_password": "{{ user `esxi_password` }}",
      "remote_datastore": "{{ user `esxi_datastore` }}",
      "skip_validate_credentials": true,
      "skip_export": false,
      "keep_registered": false,
      "format": "ova",
      "output_directory": "../ova/",

      "iso_urls": [
	      "../ISO/debian-10.9.0-amd64-netinst.iso",
        "https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-10.9.0-amd64-netinst.iso"
      ],
      "iso_target_path":"../ISO/",
      "iso_checksum": "md5:73e74eef3d998d522f92295016d92fdc",

      "boot_wait": "5s",
      "boot_command": [
        "<esc><wait>",
        "auto <wait>",
        "preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg <wait>",
        "<enter><wait>"
      ],
      "http_directory": "http",
      "ssh_username":"analyste",
      "ssh_private_key_file":"../FILES/analyste.key",
      "ssh_keypair_name":"analyste.key",
      "ssh_wait_timeout": "1800s",

      "shutdown_command": "echo Packer | sudo -S shutdown -P now",
      "headless": true,
      "vnc_disable_password": true,
      "vnc_bind_address": "127.0.0.1",
      "vnc_over_websocket": true,
      "insecure_connection": true
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "echo 'dfirlab-elk' | sudo tee /etc/hostname",
        "echo '127.0.0.1    dfirlab-elk' | sudo tee /etc/hosts",
        "sudo apt update && sudo apt upgrade -y",
        "sudo apt install -y open-vm-tools htop net-tools ifplugd resolvconf vim git-core apt-transport-https ca-certificates curl gnupg2 software-properties-common suricata",
        "curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"; sudo apt update; sudo apt install -y docker-ce",
        "echo 'alias ll=\"ls -la\" >> $HOME/.bashrc'; echo 'alias ll=\"ls -la\"' | sudo tee -a /root/.bashrc;",
        "echo 'set mouse-=a' > $HOME/.vimrc; echo 'set mouse-=a' | sudo tee /root/.vimrc",
        "echo 'auto eth0' | sudo tee -a /etc/network/interfaces",
        "echo 'iface eth0 inet dhcp' | sudo tee -a /etc/network/interfaces",
        "echo 'pre-up sleep 2' | sudo tee -a /etc/network/interfaces",
        "sudo sed -i -e 's/GRUB_CMDLINE_LINUX=.*/GRUB_CMDLINE_LINUX=\"net.ifnames=0 biosdevname=0\"/g' /etc/default/grub",
        "sudo grub-mkconfig -o /boot/grub/grub.cfg",
        "sudo sed -i -e 's/INTERFACES=.*/INTERFACES=\"eth0\"/g' /etc/default/ifplugd",
        "sudo useradd elk",
        "sudo usermod -a -G docker elk",
        "sudo /etc/init.d/docker start",
	"sudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose; sudo chmod +x /usr/local/bin/docker-compose; sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose",
        "sudo mkdir /opt/docker-elk",
        "sudo chown -R elk: /opt/docker-elk",
        "sudo -u elk git clone https://github.com/deviantony/docker-elk.git /opt/docker-elk",
        "sudo -u elk sed -i 's/xpack.security.enabled: true/xpack.security.enabled: false/g'  /opt/docker-elk/elasticsearch/config/elasticsearch.yml",
        "cd /opt/docker-elk; sudo -u elk docker-compose up -d",
        "sudo git clone https://github.com/Neo23x0/sigma /opt/sigma",
        "cd /opt/; sudo curl -s -O https://raw.githubusercontent.com/google/timesketch/master/contrib/deploy_timesketch.sh; sudo chmod 755 deploy_timesketch.sh; sudo ./deploy_timesketch.sh",
        "cd /opt; sudo cp -rf sigma/rules/windows/ timesketch/etc/timesketch/sigma/rules/",
        "cd /opt; sudo cp -rf sigma/rules/linux/ timesketch/etc/timesketch/sigma/rules/",
	"cd /opt/timesketch; sudo docker-compose up -d"
        ]
    }
  ]
}
